
<%

def get_resized_png(png, dimension)
  resized_image = ChunkyPNG::RMagick.export(png).scale(dimension, dimension)
  return ChunkyPNG::RMagick.import(resized_image)
end

def get_encoded_pngs(file_id)
  png_path = 'test/test_pngs'
  file_name = "snapshot#{file_id}.png"

  original_png = File.open("#{png_path}/#{file_name}") { |io| ChunkyPNG::Image.from_io(io) }
  thumbnail_png = get_resized_png(original_png, 128)
  display_png = get_resized_png(original_png, 512)

  return { encoded_original: Base64.strict_encode64(original_png.to_abgr_stream),
           encoded_thumbnail: Base64.strict_encode64(thumbnail_png.to_abgr_stream),
           encoded_display: Base64.strict_encode64(display_png.to_abgr_stream)
  }
end


%>

<% snapshot1_encodeds = get_encoded_pngs('01') %>
snapshot1:
  picture: picture01
  cell_size: 25
  original_png_width: 6
  original_png_height: 6
  original_png_blob: <%= snapshot1_encodeds[:encoded_original] %>
  thumbnail_png_blob: <%= snapshot1_encodeds[:encoded_thumbnail] %>
  display_png_blob: <%= snapshot1_encodeds[:encoded_display] %>
